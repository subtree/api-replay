name: Auto-Publish to npm

on:
  push:
    branches: [main]

jobs:
  test-and-publish:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Setup Bun
      uses: oven-sh/setup-bun@v1
      with:
        bun-version: latest
    
    - name: Install dependencies
      run: bun install
    
    - name: Run TypeScript type check
      run: bun run typecheck
    
    - name: Run tests
      run: bun run test
    
    - name: Build project
      run: bun run build
    
    - name: Generate TypeScript declarations
      run: npx tsc --emitDeclarationOnly
    
    - name: Setup Node.js for npm publishing
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Configure git
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    
    - name: Determine version bump
      id: version
      run: |
        # Get commit messages since last tag
        LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
        COMMITS=$(git log $LAST_TAG..HEAD --oneline --pretty=format:"%s")
        
        echo "=== Commits since $LAST_TAG ==="
        echo "$COMMITS"
        echo "=========================="
        
        if echo "$COMMITS" | grep -qE "BREAKING CHANGE"; then
          echo "type=major" >> $GITHUB_OUTPUT
          echo "🚨 Version bump: MAJOR (breaking change)"
        elif echo "$COMMITS" | grep -qE "^feat"; then
          echo "type=minor" >> $GITHUB_OUTPUT
          echo "✨ Version bump: MINOR (new feature)"
        elif echo "$COMMITS" | grep -qE "^fix"; then
          echo "type=patch" >> $GITHUB_OUTPUT
          echo "🐛 Version bump: PATCH (bug fix)"
        else
          echo "type=patch" >> $GITHUB_OUTPUT
          echo "📦 Version bump: PATCH (default)"
        fi
    
    - name: Bump version and publish
      run: |
        # Bump version
        npm version ${{ steps.version.outputs.type }} --no-git-tag-version
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV
        
        echo "🏷️  Publishing v$NEW_VERSION to npm..."
        
        # Commit and tag
        git add package.json
        git commit -m "chore: release v$NEW_VERSION [skip ci]"
        git tag "v$NEW_VERSION"
        git push origin main --tags
        
        # Publish to npm
        npm publish
        
        echo "✅ Successfully published v$NEW_VERSION!"
      env:
        NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
    
    - name: Create GitHub Release
      if: env.NEW_VERSION
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ env.NEW_VERSION }}
        release_name: Release v${{ env.NEW_VERSION }}
        body: |
          🚀 **api-replay v${{ env.NEW_VERSION }}** is now available!
          
          **Installation:**
          ```bash
          bun add -d api-replay
          ```
          
          **Requirements:**
          - Bun >= 1.1.0
          
          **What's Changed:**
          See the [commit history](https://github.com/subtree/api-replay/commits/v${{ env.NEW_VERSION }}) for detailed changes.
        draft: false
        prerelease: false